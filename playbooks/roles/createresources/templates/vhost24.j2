#jinja2: trim_blocks: "true", lstrip_blocks: "true"
# {{ ansible_managed }}
<VirtualHost *:{% if varnish_required|default(false) == true %}8080{% else %}80{% endif %}>
  ServerName {{ item.url }}
  {% if item.alias is defined %}
    {% for alias in item.alias %}
      ServerAlias {{ alias }}
    {% endfor %}
  {% endif %}

  ServerAdmin {{ item.admin }}
  DocumentRoot {{ item.basedir }}/{{ item.webdir|default('web') }}

  {% if item.phppool is defined %}
  <filesmatch "\.php">
    SetHandler "proxy:unix:/var/run/php_fpm_{{ item.phppool }}.sock|fcgi://{{ item.phppool }}"
  </filesmatch>

  <Proxy "fcgi://{{ item.phppool }}/">
	ProxySet connectiontimeout=5 timeout=121 acquire=1000
  </Proxy>
  {% endif %}

  <Directory {{ item.basedir }}/{{ item.webdir|default('web') }}>
      Options FollowSymLinks
      Require all granted
      AllowOverride All
  </Directory>

  ErrorLog {{ item.basedir }}/logs/{{ item.url }}-error.log
  CustomLog {{ item.basedir }}/logs/{{ item.url }}-access.log combined{% if rev_proxy|default(false) == true %}_xfwded{% endif %}

  include extra.d/extra.{{ item.url }}.conf
  {% if item.ssl | default(False) %}
    {% if item.ssl_redirect_http | default(False) %}
      RewriteEngine On
      RewriteCond %{HTTP:X-Forwarded-Proto} !^https$
      {% if item.ssl_redirect_to_default|default(True) %}
      RewriteRule ^(.*)$    https://{{ item.url }}$1 [R=301,L]
      {% else %}
      RewriteRule ^(.*)$    https://%{HTTP_HOST}$1 [R=301,L]
      {% endif %}
    {% endif %}
  {% endif %}

</VirtualHost>

{% if item.ssl | default(False) %}
  {% if not nginx_required %}
  {# only listen on 443 in case we don't use nginx to terminate https #}

  <VirtualHost *:443>
    ServerName {{ item.url }}
    {% if item.alias is defined %}
      {% for alias in item.alias %}
        ServerAlias {{ alias }}
      {% endfor %}
    {% endif %}

    {% if varnish_required|default(false) == true %}  # Terminate SSL to varnish
      RequestHeader set X-Forwarded-Proto "https"

      ProxyPreserveHost On
      ProxyPass / http://127.0.0.1:80/
      ProxyPassReverse / http://127.0.0.1:80/

      <Location />
        SSLRequireSSL
      </Location>

    {% else %}  # Normal Apache vhost
      {% if item.phppool is defined %}
        <filesmatch "\.php">
          SetHandler "proxy:unix:/var/run/php_fpm_{{ item.phppool }}.sock|fcgi://{{ item.phppool }}"
        </filesmatch>

        <Proxy "fcgi://{{ item.phppool }}/">
	  ProxySet connectiontimeout=5 timeout=121 acquire=1000
        </Proxy>
      {% endif %}
      DocumentRoot {{ item.basedir }}/{{ item.webdir|default('web') }}

      <Directory {{ item.basedir }}/{{ item.webdir|default('web') }}>
        Options FollowSymLinks
        Require all granted
        AllowOverride All
      </Directory>

    {% endif %}  # common ssl part
    ErrorLog {{ item.basedir }}/logs/{{ item.url }}-ssl-error.log
    CustomLog {{ item.basedir }}/logs/{{ item.url }}-ssl-access.log combined
    LogLevel warn

    SSLEngine on

  {% if item.ssl == "letsencrypt" %}
    SSLCertificateFile        /etc/ssl/{{ item.url }}/fullchain.cer
  {% else %}
    SSLCertificateFile        /etc/ssl/{{ item.url }}/{{ item.url }}.crt
  {% endif %}
  {% if item.ssl == "commercial" %}
    SSLCertificateChainFile   /etc/ssl/{{ item.url }}/{{ item.url }}.ca_bundle.crt
  {% endif %}
    SSLCertificateKeyFile     /etc/ssl/{{ item.url }}/{{ item.url }}.key

  {% if item.hsts is defined %}
    # HSTS (mod_headers is required) (15768000 seconds = 6 months)
    Header always set Strict-Transport-Security "max-age=15768000"
  {% endif %}

  include extra.d/extra.{{ item.url }}.conf

  </VirtualHost>
{% endif %}
{% endif %}
